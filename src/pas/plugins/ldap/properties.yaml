factory: form
name: ldapsettings
props:
    action: expr:context.action
    class: edit-form enableFormTabbing enableUnloadProtection
widgets:
- server:
    factory: fieldset
    props:
        legend: LDAP Server Settings
        class: formPanel
    widgets:
    - uri:
        factory: field:label:help:error:text
        value: expr:context.props.uri
        props:
            label: LDAP URI
            help: "Example: ldap://127.0.0.1:12345"
            required: No URI defined
    - user:
        factory: field:label:error:text
        value: expr:context.props.user
        props:
            label: LDAP Manager User
            required: No user defined
    - password:
        factory: field:label:error:password
        value: expr:context.props.password
        props:
            label: LDAP Manager Password
            required: No password defined
    - check_duplicates:
        factory: field:label:checkbox
        value: expr:context.props.check_duplicates
        props:
            label: Check for duplicate keys?
            help:  If duplicate keys are found in LDAP fail - or ignore them and take first?
    - ignore_cert:
        factory: field:label:checkbox
        value: expr:context.props.ignore_cert
        props:
            label: Ignore TLS/SSL certificate errors
            help:  Ignore TLS/SSL certificate errors for self signed certificates
- users:
    factory: fieldset
    props:
        legend: Users Settings
        class: formPanel
    widgets:
    - dn:
        factory: field:label:error:text
        value: expr:context.users.baseDN
        props:
            label: Users container DN
            required: No Users DN defined
    - scope:
        factory: field:label:error:select
        value: expr:str(context.users.scope)
        props:
            label: Users search scope
            vocabulary: expr:context.scope_vocab
    - query:
        factory: field:label:error:text
        value: expr:context.users.queryFilter
        props:
            label: Users search query filter
    - object_classes:
        factory: field:error:array
        value: "expr:not isinstance(context.users.objectClasses, basestring) and context.users.objectClasses or [context.users.objectClasses]"
        props:
            label: Object classes for User creation
        widgets:
            - oc:
                factory: field:text
    - memberOfSupport:
        factory: field:label:checkbox
        value: expr:context.users.memberOfSupport
        props:
            label: memberOf attribute supported?
    - account_expiration:
        factory: field:label:checkbox
        value: expr:context.users.account_expiration
        props:
            label: User Accounts expires?
    - expires_attr:
        factory: field:label:text
        value: expr:context.users.expiresAttr
        props:
            label: Attribute containing expiration Time
    - expires_unit:
        factory: field:label:select
        value: expr:context.users.expiresUnit
        props:
            label: Account expiration unit
            vocabulary: expr:((0, 'Days since Epoch'), (1, 'Seconds since epoch'))
    - aliases_attrmap:
        factory: field:label:error:dict
        value: expr:context.users_attrmap
        props:
            label: User attribute aliases
            required: User attribute aliases values are mandatory
            static: True
            head:
                key: Reserved key
                value: LDAP attr name
    - propsheet_attrmap:
        factory: field:label:error:dict
        value: expr:context.users_propsheet_attrmap
        props:
            label: User Property-Sheet Attributes
            head:
                key: Name on Sheet
                value: LDAP Attribute
- groups:
    factory: fieldset
    props:
        legend: Groups Settings
        class: formPanel
    widgets:
    - dn:
        factory: field:label:error:text
        value: expr:context.groups.baseDN
        props:
            label: Groups container DN
            required: No Groups DN defined
    - scope:
        factory: field:label:error:select
        value: expr:str(context.groups.scope)
        props:
            label: Groups search scope
            vocabulary: expr:context.scope_vocab
    - query:
        factory: field:label:error:text
        value: expr:context.groups.queryFilter
        props:
            label: Groups search query filter
    - object_classes:
        factory: field:error:array
        value: "expr:not isinstance(context.groups.objectClasses, basestring) and context.groups.objectClasses or [context.groups.objectClasses]"
        props:
            label: Object classes for Group creation
        widgets:
            - oc:
                factory: field:text
    - memberOfSupport:
        factory: field:label:checkbox
        value: expr:context.groups.memberOfSupport
        props:
            label: memberOf attribute supported?
    - aliases_attrmap:
        factory: field:label:error:dict
        value: expr:context.groups_attrmap
        props:
            label: Group attribute aliases
            required: Group attribute aliases values are mandatory
            static: True
            head:
                key: Reserved key
                value: LDAP attr name
    - propsheet_attrmap:
        factory: field:label:error:dict
        value: expr:context.groups_propsheet_attrmap
        props:
            label: Group Property-Sheet Attributes
            head:
                key: Name on Sheet
                value: LDAP Attribute
- cache:
    factory: fieldset
    props:
        legend: Cache Settings
        class: formPanel
    widgets:
    - cache:
        factory: field:label:error:checkbox
        value: expr:context.props.cache
        props:
            label: Cache LDAP queries
    - memcached:
        factory: field:label:error:text
        value: expr:context.props.memcached
        props:
            label: Memcached Server to use
            help: global - same server for all ldap plugins
            field.class: memcached field
    - timeout:
        factory: field:label:error:number
        value: expr:context.props.timeout
        props:
            label: Cache timeout in seconds
            datatype: integer
- save:
    factory: submit
    props:
        action: save
        expression: True
        handler: context.save
        next: context.next
        label: Save
